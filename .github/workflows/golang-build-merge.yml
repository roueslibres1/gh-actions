name: golang-build-merge
on:
  # push:
  #   branches: [main]
  workflow_call:
    inputs:
      go-version:
        description: the go version
        required: false
        type: string
        default: "1.17"

    secrets:
      token:
        required: true
        description: secret used to check out repository. If actions in this workflow should trigger other actions provice as PAT otherwise the github_token will suffice

jobs:
  build-go:
    name: 🏗 build-go
    runs-on: ubuntu-latest
    steps:
      - name: "☁️checkout repository"
        uses: actions/checkout@v2
      - name: "🔧 setup go"
        uses: roueslibres1/gh-actions/setup-go@main
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: "🏗 Build"
        run: |
          make build_all
  test-go:
    name: 🧪 test-go
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
      - name: "🔧 setup go"
        uses: roueslibres1/gh-actions/setup-go@main
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: "🧪 Test"
        run: |
          make test
  codegen-go:
    name: 🔌 codegen
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
      - name: "🔧 setup go"
        uses: roueslibres1/gh-actions/setup-go@main
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: "🔌 generate"
        run: |
          make generate
          git diff --exit-code -- .
      - name: "🧪 check tidyness of go.mod and go.sum"
        run: |
          go mod tidy -compat=1.17
          git diff --exit-code -- .
  management-go:
    name: "🙀 management"
    runs-on: ubuntu-latest
    needs: [build-go, test-go, codegen-go]
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token }}
      - name: "🔧 setup go"
        uses: roueslibres1/gh-actions/setup-go@main
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: "🙀 Autotag"
        if: steps.setup_go.outputs.svermaker-is-release == 'true'
        uses: roueslibres1/gh-actions/create-tag@main
        id: create_tag
        with:
          tag: ${{ steps.setup_go.outputs.svermaker-go-build-version }}
